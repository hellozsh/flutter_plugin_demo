// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/zsh_demo.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "proto/ZshDemo.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(ProtosNIMLoginStep);

#pragma mark - ProtosZshDemoRoot

@implementation ProtosZshDemoRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - ProtosZshDemoRoot_FileDescriptor

static GPBFileDescriptor *ProtosZshDemoRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                 objcPrefix:@"Protos"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - ProtosNIMAutoLoginData

@implementation ProtosNIMAutoLoginData

@dynamic account;
@dynamic token;
@dynamic forcedMode;
@dynamic hasStep, step;

typedef struct ProtosNIMAutoLoginData__storage_ {
  uint32_t _has_storage_[1];
  NSString *account;
  NSString *token;
  ProtosNIMLoginStep *step;
} ProtosNIMAutoLoginData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "account",
        .dataTypeSpecific.clazz = Nil,
        .number = ProtosNIMAutoLoginData_FieldNumber_Account,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ProtosNIMAutoLoginData__storage_, account),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "token",
        .dataTypeSpecific.clazz = Nil,
        .number = ProtosNIMAutoLoginData_FieldNumber_Token,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ProtosNIMAutoLoginData__storage_, token),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "forcedMode",
        .dataTypeSpecific.clazz = Nil,
        .number = ProtosNIMAutoLoginData_FieldNumber_ForcedMode,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "step",
        .dataTypeSpecific.clazz = GPBObjCClass(ProtosNIMLoginStep),
        .number = ProtosNIMAutoLoginData_FieldNumber_Step,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ProtosNIMAutoLoginData__storage_, step),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ProtosNIMAutoLoginData class]
                                     rootClass:[ProtosZshDemoRoot class]
                                          file:ProtosZshDemoRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ProtosNIMAutoLoginData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ProtosNIMLoginStep

@implementation ProtosNIMLoginStep

@dynamic state;

typedef struct ProtosNIMLoginStep__storage_ {
  uint32_t _has_storage_[1];
  ProtosNIMLoginStep_State state;
} ProtosNIMLoginStep__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "state",
        .dataTypeSpecific.enumDescFunc = ProtosNIMLoginStep_State_EnumDescriptor,
        .number = ProtosNIMLoginStep_FieldNumber_State,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ProtosNIMLoginStep__storage_, state),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ProtosNIMLoginStep class]
                                     rootClass:[ProtosZshDemoRoot class]
                                          file:ProtosZshDemoRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ProtosNIMLoginStep__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t ProtosNIMLoginStep_State_RawValue(ProtosNIMLoginStep *message) {
  GPBDescriptor *descriptor = [ProtosNIMLoginStep descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ProtosNIMLoginStep_FieldNumber_State];
  return GPBGetMessageRawEnumField(message, field);
}

void SetProtosNIMLoginStep_State_RawValue(ProtosNIMLoginStep *message, int32_t value) {
  GPBDescriptor *descriptor = [ProtosNIMLoginStep descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ProtosNIMLoginStep_FieldNumber_State];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - Enum ProtosNIMLoginStep_State

GPBEnumDescriptor *ProtosNIMLoginStep_State_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "UnKnow\000UnLogin\000Forbidden\000VerError\000";
    static const int32_t values[] = {
        ProtosNIMLoginStep_State_UnKnow,
        ProtosNIMLoginStep_State_UnLogin,
        ProtosNIMLoginStep_State_Forbidden,
        ProtosNIMLoginStep_State_VerError,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ProtosNIMLoginStep_State)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ProtosNIMLoginStep_State_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ProtosNIMLoginStep_State_IsValidValue(int32_t value__) {
  switch (value__) {
    case ProtosNIMLoginStep_State_UnKnow:
    case ProtosNIMLoginStep_State_UnLogin:
    case ProtosNIMLoginStep_State_Forbidden:
    case ProtosNIMLoginStep_State_VerError:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
